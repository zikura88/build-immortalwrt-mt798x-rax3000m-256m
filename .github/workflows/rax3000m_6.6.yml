# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: Build rax3000m_6.6

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

env:
  REPO_URL: https://github.com/zikura88/immortalwrt-mt798x-6.6.git
  REPO_BRANCH: openwrt-24.10-6.6
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: rax3000m_6.6_251001.config
  DIY_P1_SH: diy-part1.sh
  DIY_P3_SH: diy-part3.sh
  TZ: Asia/Shanghai
  DEVICE: rax3000m
  UPLOAD_OUTPUT: true

jobs:
  _rax3000m:
    runs-on: ubuntu-24.04
    permissions:
      contents: write

    steps:
    - name: Checkout Repository (your repo with patches, config, scripts)
      uses: actions/checkout@main
      with:
        path: repo

    - name: 检查服务器配置
      if: (!cancelled())
      run: |
        echo "警告⚠"
        echo "若分配的服务器性能不足，务必及时取消，重新运行！"
        echo "已知编译成功CPU型号：8370C,8171M"
        echo "已知性能不足CPU型号：8272CL,E5系列"
        echo "--------------------------CPU信息--------------------------"
        echo "CPU物理数量:$(cat /proc/cpuinfo| grep "physical id"| sort| uniq| wc -l)"
        echo -e "CPU核心及版本信息：$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c) \n"
        echo "--------------------------内存信息--------------------------"
        echo "已安装内存详细信息："
        sudo lshw -short -C memory | grep GiB
        echo -e "\n"
        echo "--------------------------硬盘信息--------------------------"
        echo -e  "硬盘数量：$(ls /dev/sd* | grep -v [1-9] | wc -l) \n"
        echo "硬盘详情："
        df -Th

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2404)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /mnt/workdir
        sudo chown $USER:$GROUPS /mnt/workdir

    - name: Clone OpenWrt Source
      working-directory: /mnt/workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /mnt/workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Load custom feeds
      run: |
        #[ -e repo/$FEEDS_CONF ] && mv repo/$FEEDS_CONF openwrt/feeds.conf.default
        [ -e repo/$DIY_P1_SH ] && chmod +x repo/$DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/repo/$DIY_P1_SH

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Replace libxcrypt Makefile with custom version
      run: |
          cp repo/custom-files/libxcrypt-Makefile openwrt/feeds/packages/libs/libxcrypt/Makefile
          echo "✅ Custom Makefile applied!"
          ls -l openwrt/feeds/packages/libs/libxcrypt/Makefile

    - name: Load custom configuration
      run: |
        # 复制 files 目录（如果有）
        [ -e repo/files ] && mv repo/files openwrt/files
        # 复制配置文件
        [ -e repo/$CONFIG_FILE ] && mv repo/$CONFIG_FILE openwrt/.config
        # 赋执行权限并运行 diy-part3.sh
        [ -e repo/$DIY_P3_SH ] && chmod +x repo/$DIY_P3_SH
        cd openwrt
        $GITHUB_WORKSPACE/repo/$DIY_P3_SH

    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: 编译固件
      run: |
        cd openwrt
        make -j$(nproc)
        echo "FILE_DATE=$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: 上传输出文件
      uses: actions/upload-artifact@v4
      if: env.UPLOAD_OUTPUT == 'true' && !cancelled()
      with:
        name: ${{ env.DEVICE }}--${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: 整理输出文件
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages

    - name: 发布固件至 Release
      uses: ncipollo/release-action@v1
      with:
        tag: "${{ env.DEVICE }}--${{ env.FILE_DATE }}"
        artifacts: "openwrt/bin/targets/*/*/*"
        body: |
          # 未测试×
          
          IP: 192.168.5.1 | Password: none
